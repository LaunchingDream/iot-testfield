{"version":3,"sources":["interactors/redux/modules/global/reducers.ts","interactors/redux/modules/global/actions.ts","common/types.ts","interactors/redux/rootReducer.ts","common/strings.ts","mocks/company.ts","interactors/redux/modules/global/sagas.ts","interactors/redux/rootSaga.ts","interactors/redux/index.ts","presenters/assets/icons/doulbe-arrow-right-icon.svg","presenters/assets/icons/doulbe-arrow-left-icon.svg","presenters/assets/logos/kist-logo.svg","presenters/assets/logos/nipa-logo.svg","presenters/assets/logos/ifez-logo.svg","presenters/assets/logos/itp-logo.svg","presenters/components/CompanyList/CompanyCard/DemoInfo/DemoInfoDemoStep.tsx","presenters/components/CompanyList/CompanyCard/DemoInfo/DemoInfoDeviceType.tsx","presenters/components/CompanyList/CompanyCard/CompanyCard.tsx","presenters/components/CompanyList/CompanyList.tsx","presenters/assets/logos/start-up-park.svg","presenters/assets/icons/search-icon.svg","presenters/components/SearchBar/SearchBar.tsx","presenters/components/Sidebar/Header/CurrentTime/CurrentTime.tsx","presenters/components/Sidebar/Header/Tab/Tab.tsx","presenters/components/Sidebar/Header/Header.tsx","presenters/components/Sidebar/Sidebar.tsx","presenters/assets/logos/iot-testfield-logo.svg","presenters/assets/icons/gps-receiver-icon.svg","presenters/assets/icons/nine-axis-senser-icon.svg","presenters/assets/icons/mobility-gps-icon.svg","presenters/assets/icons/iot-module-icon.svg","presenters/assets/icons/u-gps-senser-icon.svg","presenters/assets/icons/status-sender-icon.svg","presenters/assets/icons/fixed-camera-icon.svg","presenters/components/NotificationList/NotificationItem/NotificationItem.tsx","presenters/components/NotificationList/NotificationList.tsx","presenters/pages/main/MainInfo/MainInfo.tsx","presenters/pages/main/map/image/AnimatedDot.ts","presenters/pages/main/map/image/GPSImage.ts","presenters/pages/main/map/MapPage.tsx","presenters/pages/main/Main.tsx","presenters/utilities/sidebar.ts","presenters/pages/splash/Splash.tsx","presenters/routes.tsx","reportWebVitals.ts","history.ts","index.tsx","interactors/redux/modules/global/index.ts","interactors/redux/modules/global/hooks.ts"],"names":["globalReducer","createReducer","sidebar","isCollapsed","activeKey","inputValue","selectedCompnay","notifications","handleAction","updateCompany","state","payload","company","changeCollapsed","setSidebarActiveTab","keyToActive","setInputValue","newValue","addNotification","notification","length","slice","setSelectedCompnay","createAction","startNotificationInterval","DemoStep","DeviceType","CompanyList","rootReducer","combineReducers","global","strings","Waiting","InProgress","Completed","GPS","NonGPS","Atmosphere","Condition","None","name","Wedrive","description","demoStep","deviceType","inputType","activeCount","logo","StarPickers","BNCTech","Papaya","IDCITI","ParkingGo","HaeRang","MNC","GoSongdo","Myren","TrinityWing","SHTechnology","setSelectedCompnaySaga","startNotificationIntervalSaga","glboalSaga","getRandomId","originNumbers","numNumber","Math","floor","random","filter","n","generateNotification","companys","devicedId","id","uuidv4","date","Date","now","action","availableCompany","CompanyMockData","c","newId","push","put","select","delay","type","getType","all","takeLatest","rootSaga","DemoInfoDemoStep","className","style","minWidth","Strings","DemoInfoDeviceType","CompanyCard","selectCompany","useGlobal","onClick","src","useGlobalState","data","d","includes","dataSource","renderItem","item","Item","split","SearchBar","marginBottom","setInputNewValue","width","height","backgroundColor","onChange","e","target","value","placeholder","suffix","searchIcon","CurrentTime","useState","setDate","useEffect","timerID","setInterval","clearInterval","format","TabPane","Tabs","customTab","isActive","title","count","additionalClassName","customTabPane","activeTabKey","key","tab","Tab","setSidebarActiveTabIndex","tabBarStyle","borderBottomWidth","Header","startUPParkLogo","alt","Sidebar","justify","span","kistLogo","nipaLogo","ifezLogo","itpLogo","doulbeArrowLeftIcon","doulbeArrowRightIcon","NotificationItem","console","log","imgSource","gpsReceiverIcon","nineAxisSenserIcon","mobilityGpsIcon","iotModuleIcon","uGpsSenserIcon","fixedCameraIcon","statusSenderIcon","NotificationList","duration","ease","map","MainInfo","iotTestFieldLogo","size","AnimatedDot","Uint8ClampedArray","context","onAdd","canvas","document","createElement","this","getContext","render","t","performance","outerRadius","clearRect","beginPath","arc","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","getImageData","triggerRepaint","SIZE","GPSImage","img","Image","crossOrigin","onload","drawImage","MapboxLanguage","require","styles","position","MapPage","mapPageCallback","mapContainer","useRef","setMap","lng","lat","zoom","currentMapInfo","setCurrentMapInfo","animateDdot","gpsImage","mapboxgl","accessToken","process","setMapFunc","container","current","newMap","Map","center","attributionControl","setRTLTextPlugin","error","addControl","defaultLanguage","on","resize","zoomTo","Marker","setLngLat","addTo","getElement","addEventListener","flyTo","speed","easing","essential","addImage","pixelRatio","addSource","features","geometry","coordinates","properties","addLayer","source","layout","minzoom","popup","Popup","closeButton","closeOnClick","getCanvas","cursor","abs","lngLat","setHTML","remove","animate","sample","i","timer","window","newGeojson","getSource","setData","getCenter","getZoom","originalEvent","fire","initializeMap","ref","Main","startNotificationRepeat","changeSidebarCollapsed","mapInstance","elem","getElementById","classes","collapsed","indexOf","padding","splice","easeTo","join","toggleSidebar","SplashPage","AppRoutes","history","path","component","MainPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","store","middleWare","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","configureStore","useSelector","dispatch","useDispatch","useCallback","useMemo"],"mappings":"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","file":"static/js/main.3b8b4d02.chunk.js","sourcesContent":["import { createReducer } from 'typesafe-actions';\n\nimport { GlobalAction, GlobalState } from './types';\nimport { updateCompany, changeCollapsed, setSidebarActiveTab, setInputValue, addNotification } from './actions';\n\nconst initialState: GlobalState = {\n  sidebar: {\n    isCollapsed: false,\n    activeKey: 'tab-all',\n    inputValue: '',\n  },\n  selectedCompnay: null,\n  notifications: [],\n};\n\nconst globalReducer = createReducer<GlobalState, GlobalAction>(initialState)\n  .handleAction(updateCompany, (state, { payload: { company, notifications }} ) => ({\n    ...state,\n    selectedCompnay: company,\n    notifications,\n  }))\n  .handleAction(changeCollapsed, (state) => ({\n    ...state,\n    sidebar: {\n      ...state.sidebar,\n      isCollapsed: !state.sidebar.isCollapsed,\n    }\n  }))\n  .handleAction(setSidebarActiveTab, (state, { payload: { keyToActive }} ) => ({\n    ...state,\n    sidebar: {\n      ...state.sidebar,\n      activeKey: keyToActive,\n    },\n  }))\n  .handleAction(setInputValue, (state, { payload: { newValue }} ) => ({\n    ...state,\n    sidebar: {\n      ...state.sidebar,\n      inputValue: newValue,\n    },\n  }))\n  .handleAction(addNotification, (state, { payload: notification } ) => {\n    if (state.notifications.length > 2) {\n      return ({\n        ...state,\n        notifications: [\n          notification,\n          ...state.notifications.slice(0, 2),\n        ],\n      })\n    } \n    return ({\n      ...state,\n      notifications: [\n        notification,\n        ...state.notifications,\n      ],\n    })\n  });\n\nexport default globalReducer;\n","import { createAction } from 'typesafe-actions';\n\nimport { Company, Notification } from '../../../../common';\n\n// company\nconst SET_SELECTED_COMPNAY = 'global/SET_SELECTED_COMPNAY';\ntype setSelectedCompnayParams = { company: Company | null };\nexport const setSelectedCompnay = createAction(SET_SELECTED_COMPNAY)<setSelectedCompnayParams>();\n\nconst UPDATE_COMPANY = 'global/UPDATE_COMPANY';\ntype updateCompanyParams = { company: Company | null, notifications: Notification[] };\nexport const updateCompany = createAction(UPDATE_COMPANY)<updateCompanyParams>();\n\n// sidebar - collapsed\n\nconst CHANGE_COLLAPSED = 'global/CHANGE_COLLAPSED';\nexport const changeCollapsed = createAction(CHANGE_COLLAPSED)();\n\n// sidebar - tab\n\nconst SET_SIDEBAR_ACTIVE_TAB = 'global/SET_SIDEBAR_ACTIVE_TAB';\ntype setSidebarActibeTabParams = { keyToActive: string };\nexport const setSidebarActiveTab = createAction(SET_SIDEBAR_ACTIVE_TAB)<setSidebarActibeTabParams>();\n\n// sidbrar - input\n\nconst SET_INPUT_VALUE = 'global/SET_INPUT_VALUE';\ntype setInputValueParams = { newValue: string };\nexport const setInputValue = createAction(SET_INPUT_VALUE)<setInputValueParams>();\n\n// notifications\n\nconst START_NOTIFICATION_INTERVAL = 'global/START_NOTIFICATION_INTERVAL';\nexport const startNotificationInterval = createAction(START_NOTIFICATION_INTERVAL)();\n\nconst ADD_NOTIFICATION = 'global/ADD_NOTIFICATION';\nexport const addNotification = createAction(ADD_NOTIFICATION)<Notification>();\n\n","/* eslint-disable no-shadow */\n\n// enums\n\nenum DemoStep {\n  Waiting = \"waiting\",\n  InProgress = \"in-progress\",\n  Completed = \"completed\",\n}\n\nenum DeviceType {\n  GPS = \"gps\",\n  NonGPS = \"non-gps\",\n  Atmosphere = \"atmosphere\",\n  Condition = \"condition\",\n  None = \"none\",\n}\n\nenum CompanyList {\n  Wedrive = \"위드라이브\",\n  StarPickers = \"별따러가자\",\n  BNCTech = \"비엔씨테크\",\n  Papaya = \"파파야\",\n  IDCITI = \"아이디씨티\",\n  ParkingGo = \"파킹고\",\n  HaeRang = \"해랑\",\n  MNC = \"엠엔씨엔지니어링\",\n  GoSongdo = \"송도에가면\",\n  Myren = \"마이렌\",\n  TrinityWing = \"트리니티윙\",\n  SHTechnology = \"에스에치테크놀로지\",\n}\n\n// interfaces\n\ninterface Company {\n  name: CompanyList;\n  description: string;\n  demoStep: DemoStep;\n  deviceType: DeviceType;\n  inputType: string | null;\n  activeCount: number;\n  logo: string;\n}\n\ninterface Notification {\n  id: string;\n  devicedId: number;\n  company: Company;\n  date: number;\n}\n\nexport { DemoStep, DeviceType, CompanyList };\n\nexport type { Company, Notification };\n","import { combineReducers } from 'redux';\n\nimport { globalReducer } from './modules/global';\n\nconst rootReducer = combineReducers({\n  global: globalReducer,\n});\n\nexport default rootReducer;\n"," import { DemoStep, DeviceType } from './types';\n\n const strings = {\n   [DemoStep.Waiting]: '실증 대기',\n   [DemoStep.InProgress]: '실증 진행',\n   [DemoStep.Completed]: '실증 완료',\n   [DeviceType.GPS]: '이동형 IoT 기기',\n   [DeviceType.NonGPS]: '고정형 IoT 기기',\n   [DeviceType.Atmosphere]: '환경수집형 IoT 기기',\n   [DeviceType.Condition]: '상태수집형 IoT 기기',\n   [DeviceType.None]: '설치중',\n }\n\n export default strings;\n","import { DemoStep, DeviceType, Company, CompanyList } from '../common';\n\n const company: Company[] = [{\n  name: CompanyList.Wedrive,\n  description: '프로젝트 명, 프로젝트 명, 프로젝트 명',\n  demoStep: DemoStep.InProgress,\n  deviceType: DeviceType.GPS,\n  inputType: 'GPS receiver',\n  activeCount: 16,\n  logo: 'LOGO',\n}, {\n  name: CompanyList.StarPickers,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.InProgress,\n  deviceType: DeviceType.GPS,\n  inputType: '9-Axis Senser',\n  activeCount: 10,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.BNCTech,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.InProgress,\n  deviceType: DeviceType.GPS,\n  inputType: 'Mobility GPS',\n  activeCount: 10,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.Papaya,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.InProgress,\n  deviceType: DeviceType.NonGPS,\n  inputType: 'IoT Module',\n  activeCount: 3,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.IDCITI,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.InProgress,\n  deviceType: DeviceType.NonGPS,\n  inputType: 'uGPS Senser',\n  activeCount: 3,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.ParkingGo,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.InProgress,\n  deviceType: DeviceType.Condition,\n  inputType: 'Fixed Camera',\n  activeCount: 3,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.HaeRang,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.InProgress,\n  deviceType: DeviceType.Atmosphere,\n  inputType: 'Status Sender',\n  activeCount: 5,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.MNC,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.Waiting,\n  deviceType: DeviceType.None,\n  inputType: null,\n  activeCount: 1,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.GoSongdo,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.Waiting,\n  deviceType: DeviceType.None,\n  inputType: null,\n  activeCount: 2,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.Myren,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.Waiting,\n  deviceType: DeviceType.None,\n  inputType: null,\n  activeCount: 3,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.TrinityWing,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.Waiting,\n  deviceType: DeviceType.None,\n  inputType: null,\n  activeCount: 3,\n  logo: 'LOGO2',\n}, {\n  name: CompanyList.SHTechnology,\n  description: '프로젝트 명2, 프로젝트 명2, 프로젝트 명2',\n  demoStep: DemoStep.Waiting,\n  deviceType: DeviceType.None,\n  inputType: null,\n  activeCount: 3,\n  logo: 'LOGO2',\n}];\n\nexport default company;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { put, takeLatest, all, delay, select } from 'redux-saga/effects';\nimport { getType } from 'typesafe-actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Company, Notification } from '../../../../common';\nimport { CompanyMockData } from '../../../../mocks';\n\nimport { setSelectedCompnay, updateCompany, startNotificationInterval, addNotification } from './actions';\n\nconst getRandomId = (originNumbers: number[]): any => {\n  const numNumber = Math.floor((Math.random() * 100)) + 1;\n  if (originNumbers.length === 0) {\n    return numNumber;\n  }\n  const foundNumbers = originNumbers.filter(n => n === numNumber);\n  if (foundNumbers.length === 0 ) {\n    return numNumber;\n  }\n  return getRandomId(originNumbers);\n}\n\nconst generateNotification = (companys: Company[], devicedId: number) => {\n  return {\n    id: uuidv4(),\n    devicedId,\n    company: companys.length === 1 ? companys[0] : companys[Math.floor(Math.random() * companys.length)],\n    date: Date.now(),\n  }\n};\n\nfunction* setSelectedCompnaySaga(action: ReturnType<typeof setSelectedCompnay>) {\n  const { company } = action.payload;\n  const notifications: Notification[] = [];\n  let availableCompany: Company[] = [];\n  if (company) {\n    if (company.inputType !== null) {\n      availableCompany = [company];\n    }\n  } else {\n    availableCompany = CompanyMockData.filter(c => c.inputType !== null);\n  }\n  if (availableCompany.length > 0) {\n    while(notifications.length < 3){\n      const newId = Math.floor(Math.random() * 100) + 1;\n      if (notifications.filter(n => n.devicedId === newId).length === 0) {\n        notifications.push(generateNotification(availableCompany, newId));\n      }\n    }\n  }\n  yield put(updateCompany({ \n    company,\n    notifications\n  }));\n}\n\nfunction* startNotificationIntervalSaga() {\n  const state = yield select();\n  const { selectedCompnay, notifications } = state.global;\n  let availableCompany: Company[] = [];\n  if (selectedCompnay) {\n    if (selectedCompnay.inputType !== null) {\n      availableCompany = [selectedCompnay];\n    } \n  } else {\n    availableCompany = CompanyMockData.filter(c => c.inputType !== null);\n  }\n  if (availableCompany.length > 0) {\n    const notification = generateNotification(availableCompany, getRandomId(notifications));\n    yield put(addNotification(notification));\n  }\n  yield delay(3000);\n  yield put({ type: getType(startNotificationInterval) })\n}\n\nexport function* glboalSaga() {\n  yield all([\n    takeLatest(getType(setSelectedCompnay), setSelectedCompnaySaga),\n    takeLatest(getType(startNotificationInterval), startNotificationIntervalSaga),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { glboalSaga } from './modules/global/sagas';\n\nexport default function* rootSaga() {\n  yield all([glboalSaga()]);\n}\n","import createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { History } from 'history';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nexport default (history: History) => {\n  const middleWare = [];\n\n  const sagaMiddleware = createSagaMiddleware({ context: { history } });\n  middleWare.push(sagaMiddleware);\n  if (process.env.NODE_ENV !== 'production') {\n    middleWare.push(createLogger());\n  }\n\n  const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleWare)));\n\n  sagaMiddleware.run(rootSaga);\n  \n  return store;\n};\n","export default __webpack_public_path__ + \"static/media/doulbe-arrow-right-icon.14607a51.svg\";","export default __webpack_public_path__ + \"static/media/doulbe-arrow-left-icon.9311f42c.svg\";","export default __webpack_public_path__ + \"static/media/kist-logo.4a19b85a.svg\";","export default __webpack_public_path__ + \"static/media/nipa-logo.90db0aef.svg\";","export default __webpack_public_path__ + \"static/media/ifez-logo.2e2f3d7d.svg\";","export default __webpack_public_path__ + \"static/media/itp-logo.15bef8e5.svg\";","import React from 'react'\n\nimport { DemoStep, Strings } from '../../../../../common'\nimport './DemoInfo.scss';\n\ninterface DemoInfoDemoStepProp {\n  demoStep: DemoStep;\n}\n\n\nconst DemoInfoDemoStep = ({ demoStep } : DemoInfoDemoStepProp): JSX.Element => (\n  <div className=\"demo-info\" style={{ minWidth: 90 }}>\n    <div className=\"demo-info__step\">\n      실증 단계\n    </div>\n    <div className=\"demo-info__device-type\">\n      <div className=\"demo-info__device-type__text\" >\n        {Strings[demoStep]}\n      </div>\n    </div>\n  </div>\n);\n\nexport default DemoInfoDemoStep;\n","import React from 'react'\n\nimport { DeviceType, Strings } from '../../../../../common'\nimport './DemoInfo.scss';\n\ninterface DemoInfoDeviceTypeProp {\n  deviceType: DeviceType,\n  inputType: string | null,\n}\n\nconst DemoInfoDeviceType = ({ deviceType, inputType } : DemoInfoDeviceTypeProp): JSX.Element => {\n  return (\n    <div className=\"demo-info demo-info--device-type\">\n      <div className=\"demo-info__step\">\n        실증 기기 종류\n      </div>\n      <div className=\"demo-info__device-type\">\n        <div\n          className={`demo-info__device-type__shape demo-info__device-type__shape--${deviceType}`} \n        />\n        <div className=\"demo-info__device-type__text\" >\n          {\n            inputType !== null ? inputType : Strings[DeviceType.None]\n          }\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default DemoInfoDeviceType;\n","import React from 'react'\n\nimport { DeviceType, Company } from '../../../../common'\nimport { useGlobal } from '../../../../interactors/redux/modules/global'\n\nimport { DemoInfoDemoStep, DemoInfoDeviceType } from './DemoInfo';\nimport './CompanyCard.scss';\n\ninterface CompanyCardProp {\n  company: Company;\n}\n\nconst CompanyCard = ({ company }: CompanyCardProp): JSX.Element => {\n  const { name, description, demoStep, deviceType, activeCount, inputType } = company;\n  const { selectCompany } = useGlobal();\n  return (\n    <div className=\"company-card\" onClick={()=> selectCompany(company)}>\n      <div className=\"company-card__left\">\n        <div className=\"company-card__left__image\">\n          <img \n            className=\"company-card__left__image__logo\"\n            src=\"https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_170,w_170,f_auto,b_white,q_auto:eco/152aa1f83d4d5120068a\"\n          />\n        </div>\n        <div className=\"company-card__left__info\">\n          <div className=\"company-card__left__info__name\">\n            {name}\n          </div>\n          <div className=\"company-card__left__info__desc\">\n            {description}\n          </div>\n          <div className=\"company-card__left__info__step-and-type\">\n            <DemoInfoDemoStep demoStep={demoStep} />\n            <DemoInfoDeviceType deviceType={deviceType} inputType={inputType} />\n          </div>\n        </div>\n      </div>\n      <div className=\"company-card__right\">\n        <div className={`company-card__right__count company-card__right__count--${deviceType}`}>\n          {deviceType === DeviceType.None ? '—' : activeCount}\n        </div>\n        <div className=\"company-card__right__text\">활성 기기</div>\n      </div>\n    </div>\n  )\n}\n\nexport default CompanyCard;\n","import React from 'react'\nimport { List } from 'antd';\n\nimport { DemoStep } from '../../../common/types'\nimport { CompanyMockData } from '../../../mocks'\nimport { useGlobalState } from '../../../interactors/redux/modules/global/hooks'\n\nimport CompanyCard from './CompanyCard';\nimport './CompanyList.scss';\n\nconst CompanyList = (): JSX.Element => {\n  const { sidebar: { activeKey, inputValue } } = useGlobalState(); \n\n  let data = CompanyMockData;\n  if (activeKey !== 'tab-all') {\n    switch(activeKey) {\n      case `tab-${DemoStep.Waiting}`: {\n        data = CompanyMockData.filter(c => c.demoStep === DemoStep.Waiting);\n        break;\n      }\n      case `tab-${DemoStep.InProgress}`: {\n        data = CompanyMockData.filter(c => c.demoStep === DemoStep.InProgress);\n        break;\n      }\n      case `tab-${DemoStep.Completed}`: {\n        data = CompanyMockData.filter(c => c.demoStep === DemoStep.Completed);\n        break;\n      }\n      default: \n        break;\n    }\n  }\n\n  data = data.filter(d => d.name.includes(inputValue));\n\n  return (\n    <div className=\"company-list\">\n      <List\n        dataSource={data}\n        renderItem={item => (\n          <List.Item>\n            <CompanyCard\n              company={item}\n            />\n          </List.Item>  \n        )}\n        split={false}\n      />\n    </div>\n  );\n};\n\nexport default CompanyList;\n","export default __webpack_public_path__ + \"static/media/start-up-park.b258db15.svg\";","export default __webpack_public_path__ + \"static/media/search-icon.d5998aa4.svg\";","import React from 'react';\nimport { Input } from 'antd';\n\nimport searchIcon from '../../assets/icons/search-icon.svg';\nimport { useGlobalState, useGlobal } from '../../../interactors/redux/modules/global';\n\nimport './SearchBar.scss';\n\nconst SearchBar = ({ marginBottom = 0 }: { marginBottom: number }): JSX.Element => {\n  const { sidebar: { inputValue } } = useGlobalState();\n  const { setInputNewValue } = useGlobal();\n  return (\n    <Input\n      style={{\n        width: '14.583333333333334vw',\n        height: '36px',\n        backgroundColor: '#f4f4f4',\n        marginBottom,\n      }}\n      onChange={ e => setInputNewValue(e.target.value)}\n      value={inputValue}\n      placeholder=\"Search for...\"\n      suffix={\n        <img src={searchIcon} />\n      }\n    />\n  )\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\n\nimport './CurrentTime.scss';\n\nconst CurrentTime = (): JSX.Element => {\n  const [date, setDate] = useState(new Date());\n\n  const tick = () => setDate(new Date());\n   \n  useEffect(() => {\n    const timerID = setInterval( () => tick(), 1000 );\n    return () => clearInterval(timerID);\n  });\n\n  return (\n    <div className=\"current-time\">\n      <div className=\"current-time__today\">Today</div>\n      <div className=\"current-time__date\">{format(date, 'yyyy-MM-dd')}</div>\n      <div className=\"current-time__time\">{format(date, 'HH:mm:ss')}</div>\n    </div>\n  );\n}\n\nexport default CurrentTime;\n","import React from 'react'\nimport { Tabs } from 'antd';\n\nimport { useGlobalState, useGlobal } from '../../../../../interactors/redux/modules/global/hooks'\nimport { DemoStep, Strings } from '../../../../../common'\nimport { CompanyMockData } from '../../../../../mocks'\nimport './Tab.scss';\n\nconst { TabPane } = Tabs;\n\nconst customTab = (isActive: boolean, title: string, count: number) => {\n  const additionalClassName = isActive? 'active' : '';\n  return (\n    <div className=\"custom-tab\">\n      <div className={`custom-tab__count ${additionalClassName}`}>{count}</div>\n      <div className={`custom-tab__title ${additionalClassName}`}>{title}</div>\n    </div>\n  );\n};\n\nconst customTabPane = (activeTabKey: string, key: string, title: string, count: number) => (\n  <TabPane key={key} tab={customTab(activeTabKey === key, title, count)} /> \n);\n\nconst Tab = (): JSX.Element => {\n  const { sidebar: { activeKey, inputValue } } = useGlobalState(); \n  const { setSidebarActiveTabIndex } = useGlobal();\n  const data = CompanyMockData.filter(c => c.name.includes(inputValue));\n  return (\n    <Tabs \n      activeKey={activeKey} \n      tabBarStyle={{ borderBottomWidth: 10 }}\n      onChange={key => setSidebarActiveTabIndex(key)}\n    >\n      {customTabPane(activeKey, 'tab-all', '전체', data.length)}\n      {customTabPane(\n        activeKey, \n        `tab-${DemoStep.Waiting}`, \n        Strings[DemoStep.Waiting], \n        data.filter(c => c.demoStep === DemoStep.Waiting).length\n      )}\n      {customTabPane(\n        activeKey,\n        `tab-${DemoStep.InProgress}`,\n        Strings[DemoStep.InProgress], \n        data.filter(c => c.demoStep === DemoStep.InProgress).length\n      )}\n      {customTabPane(\n        activeKey,\n        `tab-${DemoStep.Completed}`,\n        Strings[DemoStep.Completed], \n        data.filter(c => c.demoStep === DemoStep.Completed).length\n      )}\n    </Tabs>\n  );\n};\n\nexport default Tab;\n","import React from 'react';\n\nimport startUPParkLogo from '../../../assets/logos/start-up-park.svg';\nimport SearchBar from '../../SearchBar';\n\nimport CurrentTime from './CurrentTime';\nimport Tab from './Tab';\nimport './Header.scss';\n\nconst Header = (): JSX.Element => (\n  <div className=\"header\">\n    <img className=\"header__logo\" src={startUPParkLogo} alt=\"인천스타트업파크 로고\" />\n    <div className=\"header__contents\" >\n      <h2 className=\"header__contents__title\">기업 리스트</h2>\n      <div className=\"header__contents__funcs\">\n        <SearchBar marginBottom={7} />\n        <CurrentTime />\n      </div>\n      <Tab />\n    </div>\n  </div>\n)\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport { useGlobalState, useGlobal } from '../../../interactors/redux/modules/global';\nimport doulbeArrowRightIcon from '../../assets/icons/doulbe-arrow-right-icon.svg';\nimport doulbeArrowLeftIcon from '../../assets/icons/doulbe-arrow-left-icon.svg';\nimport kistLogo from '../../assets/logos/kist-logo.svg';\nimport nipaLogo from '../../assets/logos/nipa-logo.svg';\nimport ifezLogo from '../../assets/logos/ifez-logo.svg';\nimport itpLogo from '../../assets/logos/itp-logo.svg';\nimport CompanyList from '../CompanyList';\n\nimport Header from './Header';\nimport './Sidebar.scss';\n\ninterface SidebarPropInterface {\n  onClick: () => void;\n}\n\nconst Sidebar = ({ onClick }: SidebarPropInterface): JSX.Element => {\n  const { selectedCompnay, sidebar: { isCollapsed } } = useGlobalState();\n  const { selectCompany } = useGlobal();\n  return (\n    <div id=\"right\" className=\"sidebar flex-center right\">\n      <div className=\"sidebar__content\">\n        {\n          selectedCompnay \n          ? (\n            <div onClick={() => selectCompany(null)}>\n              <button>BACK</button>\n              {selectedCompnay.name}\n            </div>\n          )\n          : (\n            <>\n              <Header />\n              <CompanyList />\n              <Row className=\"sidebar__content__footer\" justify=\"center\">\n                <Col className=\"company-list__logo\" span={6}>\n                  <img src={kistLogo} />\n                </Col>\n                <Col className=\"company-list__logo\" span={6}>\n                  <img src={nipaLogo} />\n                </Col>\n                <Col className=\"company-list__logo\" span={6}>\n                  <img src={ifezLogo} />\n                </Col>\n                <Col className=\"company-list__logo\" span={6}>\n                  <img src={itpLogo} />\n                </Col>\n              </Row>\n            </>\n          )\n        }\n        <button\n          className=\"sidebar-toggle right\"\n          onClick={() => onClick()}\n        >\n          {\n            isCollapsed\n            ? <img className=\"sidebar-toggle__image\" src={doulbeArrowLeftIcon} />\n            : <img className=\"sidebar-toggle__image\" src={doulbeArrowRightIcon} />\n          }\n          \n        </button>\n      </div>\n    </div>\n  )\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/iot-testfield-logo.ff0b6cae.svg\";","export default __webpack_public_path__ + \"static/media/gps-receiver-icon.1b8e4609.svg\";","export default __webpack_public_path__ + \"static/media/nine-axis-senser-icon.d742944a.svg\";","export default __webpack_public_path__ + \"static/media/mobility-gps-icon.1eea6051.svg\";","export default __webpack_public_path__ + \"static/media/iot-module-icon.51668db4.svg\";","export default __webpack_public_path__ + \"static/media/u-gps-senser-icon.42f19c87.svg\";","export default __webpack_public_path__ + \"static/media/status-sender-icon.c8ab2d61.svg\";","export default __webpack_public_path__ + \"static/media/fixed-camera-icon.a329d23a.svg\";","import React from 'react'\nimport { format } from 'date-fns';\n\nimport { CompanyList, Notification } from '../../../../common/types';\nimport gpsReceiverIcon from '../../../assets/icons/gps-receiver-icon.svg';\nimport nineAxisSenserIcon from '../../../assets/icons/nine-axis-senser-icon.svg';\nimport mobilityGpsIcon from '../../../assets/icons/mobility-gps-icon.svg';\nimport iotModuleIcon from '../../../assets/icons/iot-module-icon.svg';\nimport uGpsSenserIcon from '../../../assets/icons/u-gps-senser-icon.svg';\nimport statusSenderIcon from '../../../assets/icons/status-sender-icon.svg';\nimport fixedCameraIcon from '../../../assets/icons/fixed-camera-icon.svg';\n\nimport './NotificationItem.scss';\n\n\nconst NotificationItem = (notification : Notification ): JSX.Element | null => {\n  console.log('notification', notification);\n  const { devicedId, date, company } = notification;\n  const { name, inputType, deviceType } = company;\n  let imgSource = null;\n  switch (name) {\n    case CompanyList.Wedrive: {\n      imgSource = gpsReceiverIcon;\n      break;\n    }\n    case CompanyList.StarPickers: {\n      imgSource = nineAxisSenserIcon;\n      break;\n    }\n    case CompanyList.BNCTech: {\n      imgSource = mobilityGpsIcon;\n      break;\n    }\n    case CompanyList.Papaya: {\n      imgSource = iotModuleIcon;\n      break;\n    }\n    case CompanyList.IDCITI: {\n      imgSource = uGpsSenserIcon;\n      break;\n    }\n    case CompanyList.ParkingGo: {\n      imgSource = fixedCameraIcon;\n      break;\n    }\n    case CompanyList.HaeRang: {\n      imgSource = statusSenderIcon;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return (\n    <div className=\"notification-item\">\n      <div className={`notification-item__shape notification-item__shape--${deviceType}`}>\n        {\n          imgSource && <img src={imgSource} />\n        }\n      </div>\n      <div className=\"notification-item__text\">\n        <div className=\"notification-item__text__device\">\n          Device ID {devicedId}. {inputType}\n          </div>\n        <div className={`notification-item__text__date-and-company notification-item__text__date-and-company--${deviceType}`}>\n          ON {format(date, 'MMM dd yyyy')}. {name}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default NotificationItem;\n","import React from 'react'\nimport QueueAnim from 'rc-queue-anim';\n\nimport { useGlobalState } from '../../../interactors/redux/modules/global';\n\nimport NotificationItem from './NotificationItem';\nimport './NotificationList.scss';\n\nconst NotificationList = (): JSX.Element | null => {\n  const { notifications } = useGlobalState();\n  console.log('notifications', notifications);\n  if (notifications.length === 0) {\n    return null;\n  } \n  return (\n    <div className=\"notification-list\">\n      <QueueAnim type={['top', 'bottom']} duration={[500, 0]} ease={['easeOutBack', 'easeInOutCirc']} >\n        {notifications.slice(0, 3).map(item => <NotificationItem key={item.id} {...item} />)}\n      </QueueAnim>\n    </div>\n  )\n};\n\nexport default NotificationList;\n","import React from 'react'\n\nimport iotTestFieldLogo from '../../../assets/logos/iot-testfield-logo.svg';\nimport NotificationList from '../../../components/NotificationList';\n\nimport './MainInfo.scss';\n\nconst MainInfo = (): JSX.Element => (\n  <div className=\"main-info\">\n    <img className=\"main-info__logo\" src={iotTestFieldLogo} alt=\"logo\" />\n    <div className=\"main-info__text\">\n      <div>인천경제자유구역의 SOC(도시, 항만, 공항, 산단 등)을 활용하여</div>\n      <div>5G 기반 IoT 기술, 서비스를 실제 필드에서 실증할 수 있는 테스트 필드</div>\n    </div>\n    <NotificationList />\n  </div>\n);\n\nexport default MainInfo;","import { Map, CustomLayerInterface } from \"mapbox-gl\";\n\nconst size = 150;\n\n// implementation of CustomLayerInterface to draw a pulsing dot icon on the map\n// see https://docs.mapbox.com/mapbox-gl-js/api/#customlayerinterface for more info\ninterface pulsingDotInterface extends CustomLayerInterface {\n  width: number,\n  height: number,\n  data: Uint8ClampedArray,\n  context: CanvasRenderingContext2D | null,\n} \n\nfunction AnimatedDot(map: Map | null): pulsingDotInterface {\n  const pulsingDotIamge: pulsingDotInterface = {\n    id: 'pulsingDot',\n    type: 'custom',\n    width: size,\n    height: size,\n    data: new Uint8ClampedArray(size * size * 4),\n    context: null,\n\n    // get rendering context for the map canvas when layer is added to the map\n    onAdd () {\n      const canvas = document.createElement('canvas');\n      canvas.width = this.width;\n      canvas.height = this.height;\n      this.context = canvas.getContext('2d');\n    },\n    \n    // called once before every frame where the icon will be used\n    render () {\n      if (this.context === null) {\n        return false;\n      }\n\n      const duration = 1000;\n      const t = (performance.now() % duration) / duration;\n      \n      const radius = (size / 2) * 0.3;\n      const outerRadius = (size / 2) * 0.7 * t + radius;\n\n      // draw outer circle\n      this.context.clearRect(0, 0, this.width, this.height);\n      this.context.beginPath();\n      this.context.arc(\n        this.width / 2,\n        this.height / 2,\n        outerRadius,\n        0,\n        Math.PI * 2\n      );\n\n      this.context.fillStyle = `rgba(255, 200, 200,${  1 - t  })`;\n      this.context.fill();\n      \n      // draw inner circle\n      this.context.beginPath();\n      this.context.arc(\n        this.width / 2,\n        this.height / 2,\n        radius,\n        0,\n        Math.PI * 2\n      );\n\n      this.context.fillStyle = 'rgba(255, 100, 100, 1)';\n      this.context.strokeStyle = 'white';\n      this.context.lineWidth = 2 + 4 * (1 - t);\n      this.context.fill();\n      this.context.stroke();\n      \n      // update this image's data with data from the canvas\n      this.data = this.context.getImageData(\n        0,\n        0,\n        this.width,\n        this.height\n      ).data;\n\n      // continuously repaint the map, resulting in the smooth animation of the dot\n      if(map !== null) {\n        map.triggerRepaint();\n      }\n      \n      // return `true` to let the map know that the image was updated\n      return true;\n    },\n  };\n  return pulsingDotIamge;\n}\n\nexport default AnimatedDot;\n","import { Map, CustomLayerInterface } from \"mapbox-gl\";\n\nconst SIZE = 150;\nconst IMAGE_URL = 'images/place.png'; \n\n// implementation of CustomLayerInterface to draw a pulsing dot icon on the map\n// see https://docs.mapbox.com/mapbox-gl-js/api/#customlayerinterface for more info\ninterface pulsingDotInterface extends CustomLayerInterface {\n  width: number;\n  height: number;\n  data: Uint8ClampedArray;\n  context: CanvasRenderingContext2D | null;\n}\n\nfunction GPSImage(map: Map | null): pulsingDotInterface {\n  const pulsingDotIamge: pulsingDotInterface = {\n    id: \"pulsingDot\",\n    type: \"custom\",\n    width: SIZE,\n    height: SIZE,\n    data: new Uint8ClampedArray(SIZE * SIZE * 4),\n    context: null,\n\n    // get rendering context for the map canvas when layer is added to the map\n    onAdd() {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = this.width;\n      canvas.height = this.height;\n      this.context = canvas.getContext(\"2d\");\n    },\n\n    // called once before every frame where the icon will be used\n    render() {\n      if (this.context === null) {\n        return false;\n      }\n\n      const img = new Image();\n      img.crossOrigin = \"Anonymous\";\n      img.onload = () => {\n        if (this.context) {\n\n          const duration = 1000;\n          const t = (performance.now() % duration) / duration;\n\n          const radius = (SIZE / 2) * 0.3;\n          const outerRadius = (SIZE / 2) * 0.7 * t + radius;\n\n          // draw outer circle\n          this.context.clearRect(0, 0, this.width, this.height);\n          this.context.beginPath();\n          this.context.arc(\n            this.width / 2,\n            this.height / 2,\n            outerRadius,\n            0,\n            Math.PI * 2\n          );\n\n          this.context.fillStyle = `rgba(35, 77, 138, ${(0.8 - t) > 0 ? 0.8 - t : 0})`;\n          this.context.fill();\n\n          // draw inner circle\n          // this.context.beginPath();\n          // this.context.arc(\n          //   this.width / 2,\n          //   this.height / 2,\n          //   radius,\n          //   0,\n          //   Math.PI * 2\n          // );\n\n          // this.context.fillStyle = \"rgba(255, 207, 61, 1)\";\n          // this.context.strokeStyle = \"white\";\n          // this.context.lineWidth = 2 + 4 * (1 - t);\n          // this.context.fill();\n          // this.context.stroke();\n\n\n          const imageWidthRatio = 0.3;\n          const imageHeightRatio = 0.4;\n\n          // this.context.drawImage(img, 0, 0);\n          this.context.drawImage(img,\n            (SIZE * (1 - imageWidthRatio)) / 2,\n            (SIZE * (1 - imageHeightRatio)) / 4,\n            (SIZE * imageWidthRatio),\n            (SIZE * imageHeightRatio),\n          );\n        }\n      };\n      img.src = IMAGE_URL;\n\n      // update this image's data with data from the canvas\n      this.data = this.context.getImageData(0, 0, this.width, this.height).data;\n\n      // continuously repaint the map, resulting in the smooth animation of the dot\n      if (map !== null) {\n        map.triggerRepaint();\n      }\n\n      // return `true` to let the map know that the image was updated\n      return true;\n    },\n  };\n  return pulsingDotIamge;\n}\n\nexport default GPSImage;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl, { Map } from 'mapbox-gl';\nimport { FeatureCollection } from 'geojson';\n\nimport { AnimatedDot, GPSImage } from './image';\nimport './MapPage.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst MapboxLanguage = require('@mapbox/mapbox-gl-language');\n\nconst styles = {\n  width: '100vw',\n  height: '100vh',\n  position: 'absolute',\n} as React.CSSProperties;\n\ninterface MapPageProp {\n  mapPageCallback: (map: Map | null) => void;\n}\n\nfunction MapPage({ mapPageCallback } : MapPageProp ): JSX.Element {\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<null | Map>(null);\n  const [currentMapInfo, setCurrentMapInfo] = useState<{\n    lng: number;\n    lat: number;\n    zoom: number;\n  }>({ lng: 0, lat: 0, zoom: 0 });\n\n  const animateDdot = AnimatedDot(map);\n  const gpsImage = GPSImage(map);\n\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY || '';\n    const initializeMap = (\n      setMapFunc: React.Dispatch<React.SetStateAction<any>>,\n      container: React.RefObject<HTMLDivElement>\n    ) => {\n      if (container.current) {\n        const newMap = new mapboxgl.Map({\n          container: container.current,\n          style: 'mapbox://styles/mondrianhyun/ckh4n35ay0wj119otcx5y0rzs',\n          center: [126.57835428720045, 37.4326310077943],\n          zoom: 5,\n          attributionControl: false,\n        });\n\n        try {\n          mapboxgl.setRTLTextPlugin(\n            'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js',\n            (error) => {\n              console.error(error);\n            }\n          );\n        } catch (e) {\n          console.error(e);\n        }\n        newMap.addControl(\n          new MapboxLanguage({\n            defaultLanguage: 'ko',\n          })\n        );\n\n        newMap.on('load', () => {\n          setMapFunc(newMap);\n          mapPageCallback(newMap);\n          newMap.resize();\n          newMap.zoomTo(11.293149678460065, { duration: 3000 });\n\n          // Marker\n\n          new mapboxgl.Marker().setLngLat([126.43589202003295, 37.46179809308903]).addTo(newMap);\n\n          new mapboxgl.Marker().setLngLat([126.6026620833045, 37.46636991376876]).addTo(newMap);\n\n          new mapboxgl.Marker()\n            .setLngLat([126.6398287987223, 37.38795066431355])\n            .addTo(newMap)\n            .getElement()\n            .addEventListener('click', () => {\n              newMap.flyTo({\n                center: [126.65037602678342, 37.384226957078454],\n                zoom: 13.959339143818982,\n                speed: 0.7,\n                easing(t) {\n                  return t;\n                },\n                essential: true, // this animation is considered essential with respect to prefers-reduced-motion\n              });\n            });\n\n          // GPS images\n\n          newMap.addImage('pulsing-dot', animateDdot, { pixelRatio: 2 });\n          newMap.addImage('gps-image', gpsImage, { pixelRatio: 2 });\n\n          const originalGeojson: FeatureCollection = {\n            type: 'FeatureCollection',\n            features: [\n              {\n                type: 'Feature',\n                geometry: {\n                  type: 'Point',\n                  coordinates: [126.66915663865325, 37.38718975227174],\n                },\n                properties: null,\n              },\n            ],\n          };\n\n          newMap.addSource('points', {\n            type: 'geojson',\n            data: originalGeojson,\n          });\n\n          newMap.addLayer({\n            id: 'points',\n            type: 'symbol',\n            source: 'points',\n            layout: {\n              'icon-image': 'gps-image',\n            },\n            minzoom: 13,\n          });\n\n          newMap.addSource('gpses', {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [\n                {\n                  type: 'Feature',\n                  geometry: {\n                    type: 'Point',\n                    coordinates: [126.66066788948115, 37.3835932898768],\n                  },\n                  properties: {\n                    description:\n                      '<strong>Capital Pride Parade</strong><p>The annual <a href=\"http://www.capitalpride.org/parade\" target=\"_blank\" title=\"Opens in a new window\">Capital Pride Parade</a> makes its way through Dupont this Saturday. 4:30 p.m. Free.</p>',\n                  },\n                },\n              ],\n            },\n          });\n\n          newMap.addLayer({\n            id: 'gpses',\n            type: 'symbol',\n            source: 'gpses',\n            layout: {\n              'icon-image': 'pulsing-dot',\n            },\n            minzoom: 13,\n          });\n\n          const popup = new mapboxgl.Popup({\n            closeButton: false,\n            closeOnClick: false\n          });\n\n          // When a click event occurs on a feature in the places layer, open a popup at the\n          // location of the feature, with description HTML from its properties.\n          newMap.on('mouseenter', 'gpses', (e) => {\n            if (e && e.features && e.features[0].geometry) {\n              console.log('e.features[0]', e.features[0]);\n              if (e.features[0].geometry.type === 'Point') {\n                newMap.getCanvas().style.cursor = 'pointer';\n                const coordinates: [number, number ] = e.features[0].geometry.coordinates as [ number, number];\n                let description = '';\n                if (e.features[0].properties) {\n                  description = e.features[0].properties.description as string;\n                }\n  \n                // Ensure that if the map is zoomed out such that multiple\n                // copies of the feature are visible, the popup appears\n                // over the copy being pointed to.\n                console.log('coordinates', coordinates);\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                  coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                }\n  \n                popup.setLngLat(coordinates).setHTML(description).addTo(newMap);\n              }\n            }\n          });\n\n          newMap.on('mouseleave', 'gpses', () => {\n            newMap.getCanvas().style.cursor = '';\n            popup.remove();\n          });\n\n          newMap.addSource('canvas-source', {\n            type: 'canvas',\n            canvas: 'canvasID',\n            coordinates: [\n              [91.4461, 21.5006],\n              [100.3541, 21.5006],\n              [100.3541, 13.9706],\n              [91.4461, 13.9706],\n            ],\n            // Set to true if the canvas source is animated. If the canvas is static, animate should be set to false to improve performance.\n            animate: true,\n          });\n\n          newMap.addLayer({\n            id: 'canvas-layer',\n            type: 'raster',\n            source: 'canvas-source',\n          });\n\n          const sample = [\n            [126.65398478507996, 37.399749087172964],\n            [126.65316402912138, 37.398920204037765],\n            [126.65278047323227, 37.398538786867384],\n            [126.65256589651106, 37.39832357297043],\n            [126.65239021182062, 37.39815204065951],\n            [126.65220111608504, 37.39796985373782],\n            [126.65196642279625, 37.39774398395687],\n            [126.65178135037421, 37.39756392689859],\n            [126.6516727209091, 37.397459514915155],\n            [126.65156006813048, 37.39734977563293],\n            [126.65145546197891, 37.397242167054486],\n            [126.65128514170647, 37.397077024876246],\n            [126.6511644423008, 37.39696302328928],\n            [126.65105111896992, 37.396854082358395],\n            [126.65100015699863, 37.396804805846195],\n            [126.65094316005707, 37.39674780486735],\n            [126.650884822011, 37.39669559832534],\n            [126.65084056556223, 37.3966476535098],\n            [126.65081977844238, 37.39663167189783],\n            [126.65081240236759, 37.39663113917736],\n            [126.65080033242701, 37.39663380277962],\n            [126.65077552199362, 37.39665084983179],\n            [126.65067628026009, 37.396712645363465],\n            [126.65062397718428, 37.39674354311018],\n            [126.65056765079498, 37.396779768038414],\n            [126.65051333606242, 37.396814394791654],\n            [126.65044493973255, 37.396857545031],\n            [126.65038123726845, 37.39689643349704],\n            [126.65032625198364, 37.396931060196394],\n            [126.65026523172857, 37.39696994862427],\n            [126.65019415318964, 37.39701309877407],\n            [126.65014788508415, 37.3970434636794],\n            [126.65010295808315, 37.39707116498582],\n            [126.65005333721636, 37.39710259530185],\n            [126.65001176297665, 37.39712816571874],\n            [126.64997220039368, 37.39715373612689],\n            [126.6499252617359, 37.39718143739254],\n            [126.64987429976463, 37.397215531243894],\n            [126.64983943104743, 37.3972347090285],\n            [126.64983674883841, 37.39724110162226],\n            [126.6498414427042, 37.397249092363715],\n            [126.64992928504944, 37.397343383048415],\n            [126.6500687599182, 37.39746697291877],\n            [126.6501733660698, 37.397571384891826],\n          ];\n\n          // on a regular basis, add more coordinates from the saved list and update the map\n          let i = 0;\n          const timer = window.setInterval(() => {\n            if (i < sample.length) {\n              const newGeojson: FeatureCollection = {\n                type: 'FeatureCollection',\n                features: [\n                  {\n                    type: 'Feature',\n                    geometry: {\n                      type: 'Point',\n                      coordinates: sample[i],\n                    },\n                    properties: {\n                      description:\n                        '<strong>Capital Pride Parade</strong><p>The annual <a href=\"http://www.capitalpride.org/parade\" target=\"_blank\" title=\"Opens in a new window\">Capital Pride Parade</a> makes its way through Dupont this Saturday. 4:30 p.m. Free.</p>',\n                    },\n                  },\n                ],\n              };\n\n              const source: mapboxgl.GeoJSONSource = newMap.getSource(\n                'points'\n              ) as mapboxgl.GeoJSONSource;\n              // console.log(\"source\", source);\n              if (source) {\n                source.setData(newGeojson);\n              }\n              if (i === sample.length - 1) {\n                i = 0;\n              } else {\n                i += 1;\n              }\n            } else {\n              window.clearInterval(timer);\n            }\n          }, 2000);\n        });\n\n        // Center the map on the coordinates of any clicked symbol from the 'symbols' layer.\n        newMap.on('click', 'points', (e) => {\n          newMap.flyTo({\n            center: e.lngLat,\n            speed: 0.5,\n          });\n          // newMap.removeImage('pulsing-dot');\n          // const animateDdot2 = AnimatedDot2(map);\n          // newMap.addImage(\"pulsing-dot\", animateDdot2, { pixelRatio: 2 });\n        });\n\n        newMap.on('move', () => {\n          setCurrentMapInfo({\n            lng: newMap.getCenter().lng,\n            lat: newMap.getCenter().lat,\n            zoom: newMap.getZoom(),\n          });\n        });\n\n        newMap.on('moveend', ({ originalEvent }) => {\n          if (originalEvent) {\n            // Usermoveend\n            newMap.fire('usermoveend');\n          } else {\n            // flyend\n            newMap.fire('flyend');\n          }\n        });\n      }\n    };\n    if (!map) {\n      initializeMap(setMap, mapContainer);\n    }\n  }, [map]);\n\n  return (\n    <div className=\"map-page\">\n      <canvas id=\"canvasID\" width=\"100%\" height=\"100%\" style={{ position: 'absolute' }}>\n        Canvas not supported\n      </canvas>\n      <div ref={mapContainer} style={styles} />\n      {map && (\n        <div className=\"map-page__information\">\n          <span>Longitude: {currentMapInfo.lng} </span>\n          <span>| Latitude: {currentMapInfo.lat} </span>\n          <span>| Zoom: {currentMapInfo.zoom}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MapPage;\n","import React, { useState, useEffect } from 'react';\nimport { Map } from 'mapbox-gl';\n\nimport { useGlobal } from '../../../interactors/redux/modules/global/hooks'\nimport { toggleSidebar } from '../../utilities';\nimport { Sidebar } from '../../components';\n\nimport MainInfo from './MainInfo';\nimport MapPage from './map';\n\nconst Main = (): JSX.Element => {\n  const { startNotificationRepeat, changeSidebarCollapsed } = useGlobal();\n  const [map, setMap] = useState<Map | null>(null);\n\n  useEffect(() => {\n    startNotificationRepeat();\n  }, []);\n\n  const mapPageCallback = (mapInstance: Map | null) => {\n    setMap(mapInstance);\n  }\n\n  const onClickSidebar = () => {\n    toggleSidebar(map);\n    changeSidebarCollapsed();\n  }\n\n  return (\n    <div>\n      <MapPage mapPageCallback={mapPageCallback} />\n      <MainInfo />\n      <Sidebar onClick={onClickSidebar} />\n    </div>\n  )\n}\n\nexport default Main;\n\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { Map } from 'mapbox-gl';\n\nexport function toggleSidebar(map: Map | null): void {\n  const id = 'right';\n  const elem = document.getElementById(id);\n  if (elem && map) {\n    const classes = elem.className.split(' ');\n    const collapsed = classes.indexOf('collapsed') !== -1;\n\n    const padding: { [key: string]: number } = { [id]: 0 };\n\n    if (collapsed) {\n      // Remove the 'collapsed' class from the class list of the element, this sets it back to the expanded state.\n      classes.splice(classes.indexOf('collapsed'), 1);\n\n      padding[id] = 300; // In px, matches the width of the sidebars set in .sidebar CSS class\n\n      map.easeTo({\n        // @ts-ignore: Unreachable code error\n        padding,\n        duration: 1000, // In ms, CSS transition duration property for the sidebar matches this value\n      });\n    } else {\n      padding[id] = 0;\n      // Add the 'collapsed' class to the class list of the element\n      classes.push('collapsed');\n\n      map.easeTo({\n        // @ts-ignore: Unreachable code error\n        padding,\n        duration: 1000,\n      });\n    }\n    // Update the class list on the element\n    elem.className = classes.join(' ');\n  }\n}\n\nexport function openSidebar(map: Map): void {\n  const id = 'right';\n  const elem = document.getElementById(id);\n  if (elem && map) {\n    const classes = elem.className.split(' ');\n    const collapsed = classes.indexOf('collapsed') !== -1;\n    const padding: { [key: string]: number } = { [id]: 0 };\n    if (collapsed) {\n      // Remove the 'collapsed' class from the class list of the element, this sets it back to the expanded state.\n      classes.splice(classes.indexOf('collapsed'), 1);\n\n      padding[id] = 300; // In px, matches the width of the sidebars set in .sidebar CSS class\n\n      map.easeTo({\n        // @ts-ignore: Unreachable code error\n        padding,\n        duration: 1000, // In ms, CSS transition duration property for the sidebar matches this value\n      });\n    }\n    // Update the class list on the element\n    elem.className = classes.join(' ');\n  }\n}\n\nexport function closeSidebar (map: Map): void {\n  const id = 'right';\n  const elem = document.getElementById(id);\n  if (elem && map) {\n    const classes = elem.className.split(' ');\n    const collapsed = classes.indexOf('collapsed') !== -1;\n\n    const padding: { [key: string]: number } = { [id]: 0 };\n\n    if (!collapsed) {\n      padding[id] = 0;\n      // Add the 'collapsed' class to the class list of the element\n      classes.push('collapsed');\n\n      map.easeTo({\n        // @ts-ignore: Unreachable code error\n        padding,\n        duration: 1000,\n      });\n    }\n    // Update the class list on the element\n    elem.className = classes.join(' ');\n  }\n}\n","import React from 'react';\n\nimport './Splash.scss';\n\nconst SplashPage = (): JSX.Element => (\n  <div className=\"splash-page\">\n    Splash\n  </div>\n)\n\nexport default SplashPage;\n\n","import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport { History } from 'history';\n\nimport { SplashPage, MainPage } from './pages';\n\nconst AppRoutes = ({ history }: { history: History }) => (\n  <Router history={history}>\n    <Switch>\n      <Route path=\"/splash\" component={SplashPage} />\n      <Route path=\"/\" component={MainPage} />\n    </Switch>\n  </Router>\n);\n\nexport default AppRoutes;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './interactors/redux';\nimport './index.less';\nimport Routes from './presenters/routes';\nimport reportWebVitals from './reportWebVitals';\nimport history from './history';\n\nReactDOM.render(\n  <Provider store={configureStore(history)}>\n    <Routes history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: htiij97tps://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from './actions';\nexport * from './hooks';\nexport { default as globalReducer } from './reducers';\nexport * from './types';\n","import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Company } from '../../../../common';\n\nimport { setSelectedCompnay, changeCollapsed, setSidebarActiveTab, setInputValue, startNotificationInterval } from './actions';\nimport { GlobalState } from './types';\n\nexport function useGlobalState(): GlobalState {\n  return useSelector(({ global }: { global: GlobalState }) => global);\n}\n\nexport function useGlobal() {\n  const dispatch = useDispatch();\n\n  const selectCompany = useCallback((company: Company | null) => {\n    dispatch(setSelectedCompnay({ company }));\n  }, [dispatch]);\n\n  const changeSidebarCollapsed = useCallback(() => {\n    dispatch(changeCollapsed());\n  }, [dispatch]);\n\n  const setSidebarActiveTabIndex = useCallback((keyToActive: string) => {\n    dispatch(setSidebarActiveTab({ keyToActive }));\n  }, [dispatch]);\n\n  const setInputNewValue = useCallback((newValue: string) => {\n    dispatch(setInputValue({ newValue }));\n  }, [dispatch]);\n\n  const startNotificationRepeat = useCallback(() => {\n    dispatch(startNotificationInterval());\n  }, [dispatch]);\n\n  return useMemo(\n    () => ({ selectCompany, changeSidebarCollapsed, setSidebarActiveTabIndex, setInputNewValue, startNotificationRepeat }),\n    [ selectCompany, changeSidebarCollapsed, setSidebarActiveTabIndex, setInputNewValue, startNotificationRepeat ]\n  );\n}\n"],"sourceRoot":""}